@using TLMaster.UI.Models.InputModels
@using TLMaster.UI.Providers
@using TLMaster.UI.Services

@inject GuildService GuildService
@inject NavigationManager NavigationManager
@inject UserProvider UserProvider

<GenericForm TInputModel="GuildInputModel"
             InputModel="guildInput"
             Id="@GuildId"
             ItemName="Guilda"
             OnValidSubmit="HandleValidSubmit">
    <ChildContent>
        <div class="form-group">
            <label for="name">Nome</label>
            <InputText id="name" class="form-control" @bind-Value="guildInput.Name" />
        </div>

        <div class="form-group">
            <label for="description">Descrição</label>
            <InputTextArea id="description" class="form-control" @bind-Value="guildInput.Description" />
        </div>
    </ChildContent>
</GenericForm>

@code {
    [Parameter] public string? GuildId { get; set; }

    private GuildInputModel guildInput = new GuildInputModel();

    protected override async Task OnInitializedAsync()
    {
        if (GuildId != null)
        {
            var guild = await GuildService.GetByIdAsync(GuildId);
            if (guild != null)
            {
                guildInput = new GuildInputModel
                {
                    Name = guild.Name,
                    Description = guild.Description
                };
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        bool result;
        guildInput.GuildMasterId = await UserProvider.GetUserId();

        if (GuildId != null)
        {
            result = await GuildService.UpdateAsync(GuildId, guildInput);
        }
        else
        {
            result = await GuildService.CreateAsync(guildInput);
        }

        NavigationManager.NavigateTo("/guilds");
    }
}