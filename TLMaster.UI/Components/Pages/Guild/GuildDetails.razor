@page "/guilds/{GuildId}"
@using TLMaster.UI.Model.Models
@using TLMaster.UI.Services

@inject GuildService GuildService
@inject NavigationManager NavigationManager

<Details TItem="GuildModel" TId="string"
         ItemName="Guild"
         Item="guild"
         GetItemName="@(c => c.Name)"
         NavigateToEdit="NavigateToEdit"
         DeleteItem="DeleteGuild">
    <ChildContent>
        <p><strong>Descrição:</strong> @context.Description</p>
        <p><strong>Guild Master:</strong> @context.GuildMaster.UserName</p>
        <p><strong>Id:</strong> @context.Id</p>

        <p><strong>Characters:</strong></p>
        <ul>
            @foreach(var character in @context.Characters)
            {
                <li>
                    <a href="/characters/@character.Id">@character.Name</a> 
                </li>
            }
        </ul>

        <a href="@context.Id/auctions/">Auctions</a>
        <a href="@context.Id/parties/">Parties</a>
        <a href="@context.Id/items/">Items</a>
        <a href="@context.Id/activities/">Activities</a>

        <p><strong>Staff:</strong></p>
        <ul>
            @foreach(var staff in @context.Staff)
            {
                <li>
                    <a href="/users/@staff.Id">@staff.UserName</a> 
                </li>
            }
        </ul>
    </ChildContent>
</Details>

@code {
    [Parameter] public string GuildId { get; set; } = string.Empty;
    private GuildModel? guild;

    protected override async Task OnInitializedAsync()
    {
        guild = await GuildService.GetByIdAsync(GuildId);
    }

    private void NavigateToEdit()
    {
        NavigationManager.NavigateTo($"/edit-guild/{GuildId}");
    }

    private async Task DeleteGuild()
    {
        var result = await GuildService.DeleteAsync(GuildId);
        if (result)
        {
            NavigationManager.NavigateTo("/guilds");
        }
    }
}
    <div>

    </div>
