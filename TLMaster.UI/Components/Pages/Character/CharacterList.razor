@page "/characters"
@using TLMaster.UI.Model.Models
@using TLMaster.UI.Providers
@using TLMaster.UI.Services

@inject CharacterService CharacterService
@inject NavigationManager NavigationManager
@inject UserProvider UserProvider

<Listing TItem="CharacterModel"
          Title="Characters"
          ItemName="Character"
          Items="characters"
          GetItemName="@(c => c.Name)"
          GetItemId="@(c => c.Id)"
          NavigateToCreate="NavigateToCreate"
          NavigateToDetails="NavigateToDetails"
          EditItem="EditCharacter"
          DeleteItem="DeleteCharacter">
</Listing>

@code {
    private List<CharacterModel>? characters;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserProvider.GetUser();
        if (user is not null)
        {
            characters = user.Characters;
        }
    }

    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("/create-character");
    }

    private void NavigateToDetails(string characterId)
    {
        NavigationManager.NavigateTo($"/characters/{characterId}");
    }

    private void EditCharacter(string characterId)
    {
        NavigationManager.NavigateTo($"/edit-character/{characterId}");
    }

    private async Task DeleteCharacter(string id)
    {
        var result = await CharacterService.DeleteAsync(id);
        if (result)
        {
            characters = await CharacterService.GetAllAsync();
        }
    }
}