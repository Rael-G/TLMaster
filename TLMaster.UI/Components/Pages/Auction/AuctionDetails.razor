@page "/auctions/{AuctionId}"
@using TLMaster.UI.Model.Models
@using TLMaster.UI.Services

@inject AuctionService AuctionService
@inject NavigationManager NavigationManager

<Details TItem="AuctionModel" TId="string"
         ItemName="Auction"
         Item="auction"
         GetItemName="@(a => a.Status.ToString())"
         NavigateToEdit="NavigateToEdit"
         DeleteItem="DeleteAuction">
    <ChildContent>
        <p><strong>Item:</strong> <a href="/items/@context.Item.Id">@context.Item.Name</a> </p>
        <p><strong>StartTime:</strong> @context.StartTime</p>
        <p><strong>Duration:</strong> @context.Duration</p>

        @if(@context.Winner is not null)
        {
            <p><strong>Item:</strong> <a href="/characters/@context.Winner.Id">@context.Winner.Name</a> </p>
        }

        <p><strong>Bids:</strong></p>
        <ul>
            @foreach(var bid in @context.Bids)
            {
                <li>
                    <a href="/bids/@bid.Id">@bid.Amount</a> 
                </li>
            }
        </ul>

        <p><strong>Id:</strong> @context.Id</p>
    </ChildContent>
</Details>

@code {
    [Parameter] public string AuctionId { get; set; } = string.Empty;
    private AuctionModel? auction;

    protected override async Task OnInitializedAsync()
    {
        auction = await AuctionService.GetByIdAsync(AuctionId);
    }

    private void NavigateToEdit()
    {
        NavigationManager.NavigateTo($"/edit-auction/{AuctionId}");
    }

    private async Task DeleteAuction()
    {
        var result = await AuctionService.DeleteAsync(AuctionId);
        if (result)
        {
            NavigationManager.NavigateTo("/activities");
        }
    }
}