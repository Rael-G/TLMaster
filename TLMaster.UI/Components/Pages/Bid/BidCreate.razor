@page "/{AuctionId}/create-bid"

@using TLMaster.UI.Model.Models
@using TLMaster.UI.Models.Enums
@using TLMaster.UI.Models.InputModels
@using TLMaster.UI.Providers
@using TLMaster.UI.Services

@inject BidService BidService
@inject NavigationManager NavigationManager
@inject UserProvider UserProvider

<GenericForm TInputModel="BidInputModel"
             InputModel="bidInput"
             Id="@BidId"
             ItemName="Bid"
             OnValidSubmit="HandleValidSubmit">
    <ChildContent>
        <div class="form-group">
            <label for="amount">Amount</label>
            <InputNumber id="amount" class="form-control" @bind-Value="bidInput.Amount" />
        </div>

        @if (userCharacters.Any())
        {
            <div class="form-group">
                <label for="character">Selecionar Personagem:</label>
                <div class="d-flex">
                    <InputSelect id="character" class="form-control me-2" @bind-Value="bidInput.BidderId">
                        @foreach (var character in userCharacters)
                        {
                            <option value="@character.Id">@character.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>
        }

    </ChildContent>
</GenericForm>

@code {
    [Parameter] public string AuctionId { get; set; } = string.Empty;
    [Parameter] public string? BidId { get; set; } = null;
    private List<CharacterModel> userCharacters = new();

    private BidInputModel bidInput = new BidInputModel();

    protected override async Task OnInitializedAsync()
    {
        var user = await UserProvider.GetUser();
        userCharacters = user?.Characters.ToList() ?? [];
        
        bidInput.BidderId = userCharacters?.FirstOrDefault()?.Id ?? string.Empty;
    }

    private async Task HandleValidSubmit()
    {
        bidInput.AuctionId = AuctionId;

        bool result;

        result = await BidService.CreateAsync(bidInput);

        NavigationManager.NavigateTo($"/{AuctionId}/bids");
    }
}