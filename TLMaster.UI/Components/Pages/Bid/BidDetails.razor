@page "/bids/{BidId}"
@using TLMaster.UI.Model.Models
@using TLMaster.UI.Services

@inject BidService BidService
@inject NavigationManager NavigationManager

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="mb-0">Bid Details</h3>
        <button class="btn btn-primary" @onclick="NavigateToEdit">Edit Bid</button>
    </div>

    @if (bid == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Bidder Information</h5>
                <p class="card-text"><strong>Amount:</strong> @bid.Amount</p>
                <p class="card-text"><strong>Bidder:</strong> <a href="/characters/@bid.Bidder.Id">@bid.Bidder.Name</a></p>
                <div class="d-flex justify-content-between mt-4">
                    <button class="btn btn-info btn-sm" @onclick="NavigateToEdit">Edit</button>
                    <button class="btn btn-danger btn-sm" @onclick="DeleteBid">Delete</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string BidId { get; set; } = string.Empty;
    private BidModel? bid;

    protected override async Task OnInitializedAsync()
    {
        bid = await BidService.GetByIdAsync(BidId);
    }

    private void NavigateToEdit()
    {
        NavigationManager.NavigateTo($"/edit-bid/{BidId}");
    }

    private async Task DeleteBid()
    {
        var result = await BidService.DeleteAsync(BidId);
        if (result)
        {
            NavigationManager.NavigateTo("/bids");
        }
    }
}
