@using AutoMapper
@using TLMaster.UI.Models.InputModels
@using TLMaster.UI.Providers
@using TLMaster.UI.Services

@inject ItemService ItemService
@inject NavigationManager NavigationManager
@inject UserProvider UserProvider
@inject IMapper Mapper

<GenericForm TInputModel="ItemInputModel"
             InputModel="itemInput"
             Id="@ItemId"
             ItemName="Item"
             OnValidSubmit="HandleValidSubmit">
    <ChildContent>
        <div class="form-group mb-4">
            <label for="name" class="form-label">Item Name</label>
            <InputText id="name" class="form-control" @bind-Value="itemInput.Name" placeholder="Enter item name" required />
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button type="submit" class="btn btn-primary w-48">
                @(ItemId != null ? "Save Changes" : "Create Item")
            </button>
            <button type="button" class="btn btn-secondary w-48" @onclick="NavigateBack">
                Cancel
            </button>
        </div>
    </ChildContent>
</GenericForm>

@code {
    [Parameter] public string? GuildId { get; set; }
    [Parameter] public string? ItemId { get; set; }

    private ItemInputModel itemInput = new ItemInputModel();

    protected override async Task OnInitializedAsync()
    {
        if (ItemId != null)
        {
            var item = await ItemService.GetByIdAsync(ItemId);
            if (item != null)
            {
                itemInput = Mapper.Map<ItemInputModel>(item);
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        bool result = false;

        if (ItemId != null)
        {
            result = await ItemService.UpdateAsync(ItemId, itemInput);
        }
        else if (GuildId != null)
        {
            itemInput.GuildId = GuildId;
            result = await ItemService.CreateAsync(itemInput);
        }

        if (result)
        {
            NavigateBack();
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo($"/{GuildId}/items");
    }
}
