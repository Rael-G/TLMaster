@using AutoMapper
@using TLMaster.UI.Models.InputModels
@using TLMaster.UI.Providers
@using TLMaster.UI.Services

@inject ItemService ItemService
@inject NavigationManager NavigationManager
@inject UserProvider UserProvider
@inject IMapper Mapper

<GenericForm TInputModel="ItemInputModel"
             InputModel="itemInput"
             Id="@ItemId"
             ItemName="Item"
             OnValidSubmit="HandleValidSubmit">
    <ChildContent>
        <div class="form-group">
            <label for="name">Nome</label>
            <InputText id="name" class="form-control" @bind-Value="itemInput.Name" />
        </div>
    </ChildContent>
</GenericForm>

@code {
    [Parameter] public string? GuildId { get; set; }
    [Parameter] public string? ItemId { get; set; }

    private ItemInputModel itemInput = new ItemInputModel();

    protected override async Task OnInitializedAsync()
    {
        if (ItemId != null)
        {
            var item = await ItemService.GetByIdAsync(ItemId);
            if (item != null)
            {
                itemInput = Mapper.Map<ItemInputModel>(item);
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        bool result;

        if (ItemId != null)
        {
            GuildId = itemInput.GuildId;
            result = await ItemService.UpdateAsync(ItemId, itemInput);
        }
        else if(GuildId != null)
        {
            itemInput.GuildId = GuildId;
            result = await ItemService.CreateAsync(itemInput);
        }

        NavigationManager.NavigateTo($"/{GuildId}/items");
    }
}