@typeparam TItem

@using System.Linq
@using Microsoft.AspNetCore.Components

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="mb-0">@Title</h3>
        <button class="btn btn-primary" @onclick="NavigateToCreate">Create @ItemName</button>
    </div>

    @if (Items == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!Items.Any())
    {
        <div class="alert alert-warning" role="alert">
            No @ItemName found.
        </div>
    }
    else
    {
        <table class="table table-striped table-hover mt-4">
            <thead>
                <tr>
                    <th scope="col">@ItemName</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Items)
                {
                    <tr>
                        <td>@GetItemName(item)</td>
                        <td>
                            <button class="btn btn-info btn-sm me-2" @onclick="async () => await NavigateToDetails.InvokeAsync(GetItemId(item))">Details</button>
                            <button class="btn btn-warning btn-sm me-2" @onclick="async () => await EditItem.InvokeAsync(GetItemId(item))">Edit</button>
                            <button class="btn btn-danger btn-sm" @onclick="async () => await DeleteItem.InvokeAsync(GetItemId(item))">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string ItemName { get; set; } = string.Empty;
    [Parameter] public List<TItem>? Items { get; set; }
    [Parameter] public Func<TItem, string> GetItemName { get; set; } = default!;
    [Parameter] public Func<TItem, string> GetItemId { get; set; } = default!;
    [Parameter] public EventCallback NavigateToCreate { get; set; }
    [Parameter] public EventCallback<string> NavigateToDetails { get; set; }
    [Parameter] public EventCallback<string> EditItem { get; set; }
    [Parameter] public EventCallback<string> DeleteItem { get; set; }
}
